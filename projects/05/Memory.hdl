// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux(in=load,sel=address[14],a=chargememory,b=chargeio); //Se o primeiro bit de address for 1, então está acessando a tela ou o teclado
    RAM16K(in=in,load=chargememory,address=address[0..13],out=memoryout); //Acessa a memória
    
    Screen(address=address[0..12],in=in,load=chargeio,out=screenout); //Recebe a saída da tela, ignorando os dois primeiros bits
    Keyboard(out=keyboardout); //Recebe a saída do keyboard

    Mux16(a=screenout,b=keyboardout,sel=address[13],out=halfout); //Se o segundo bit do address for um, não pode ser acesso a tela, se for 0 não pode ser acesso ao teclado
    Mux16(a=memoryout,b=halfout,sel=address[14],out=out); //Se o primeiro bit de address for 1, então está acessando a tela ou o teclado
}
